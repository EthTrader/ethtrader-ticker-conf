ticker {
  // General settings.
  reddit {
    frequencySeconds = 300 // Every 5 minutes
    authUrl = "https://www.reddit.com/api/v1/"
    apiUrl = "https://oauth.reddit.com/"
  }

  // Define URLs, with %s placeholders for variables and interesting fields in the response.
  providers {
    coinmarketcap {
      url = "https://api.coinmarketcap.com/v1/ticker/%s/"
      fields {
        price = "/0/price_usd"
      }
    }
    coinmarketcapnexuist {
      url = "https://coinmarketcap-nexuist.rhcloud.com/api/%s"
      fields {
        btcPrice = "/price/btc"
        usdPrice = "/price/usd"
        gbpPrice = "/price/gbp"
        eurPrice = "/price/eur"
        cnyPrice = "/price/cny"
        cadPrice = "/price/cad"
        audPrice = "/price/aud"
        btcVolume = "/volume/btc"
        usdVolume = "/volume/usd"
        gbpVolume = "/volume/gbp"
        eurVolume = "/volume/eur"
        cnyVolume = "/volume/cny"
        cadVolume = "/volume/cad"
        audVolume = "/volume/aud"
        supply = "/supply"
      }
    }
    cryptofresh {
      url = "https://cryptofresh.com/api/asset/markets?asset=%s"
      fields {
        usdPrice = "/USD/price"
        btcPrice = "/BTC/price"
      }
    }
    maker {
      url = "https://api.mkr.market/"
      fields {
        mkrPrice = "/ETH_MKR/last"
        gntPrice = "/ETH_GNT/last"
      }
    }
  }

  // Using the URLs defined above, choose some datapoints (first value is the name of the provider, the rest are used in the placeholders.
  dataPoints {
    eth = ["coinmarketcapnexuist", "eth"]

    dgd = ["coinmarketcap", "digixdao"]
    augur = ["coinmarketcap", "augur"]
    plu = ["coinmarketcap", "pluton"]
    icn = ["coinmarketcap", "iconomi"]
    maker = ["maker"]
  }

  // Define the format of the ticker(s) here:
  // Use the tokens as   path in json \ suffix symbol \    / format red/green based on sign
  // follows to display             ","{dataPointName: \"response\", valueName: \"field\", prefix: \"€\", suffix: \"¢\", precision: \"3\", useColor: \"Y\", shorten: \"Y\", divisor: \"\"}"," <- reduce big numbers with 'k' for thousands, 'M' for millions etc.
  // formatted data.                prefix symbol /     \ decimal places
  tickers {
    upper-ticker {
      font = "Segoe UI"
      fontHeight = 14
      color = "#000000"
      background = "#ffffffbb"
      backgroundHighlight = "#ffff77bb"
      positiveColor: "#00cc00ff"
      negativeColor: "#cc0000ff"
      top: "22px"
      cssSelector: "span.redditname:before"
      segments = [
        "  ",
        "{dataPointName: \"eth\", valueName: \"usdVolume\", prefix: \"Vol: $\", suffix: \"\", precision: \"1\", useColor: \"N\", shorten: \"Y\", divisor: \"1\", image: \"/img/eth.png\"}",
        "{dataPointName: \"eth\", valueName: \"supply\", prefix: \"  Supply: \", suffix: \"\", precision: \"0\", useColor: \"N\", shorten: \"Y\", divisor: \"1\"}",
        "         ",
        "{dataPointName: \"eth\", valueName: \"btcPrice\", prefix: \"BTC ฿ \", suffix: \"  \", precision: \"4\", useColor: \"N\", shorten: \"N\", divisor: \"1\", image: \"/img/btc.png\", highlight: true}",
        "       ",
        "{dataPointName: \"eth\", valueName: \"usdPrice\", prefix: \"USD $\", suffix: \"  \", precision: \"2\", useColor: \"N\", shorten: \"N\", divisor: \"1\", image: \"/img/us.png\", highlight: true}",
        "       ",
        "{dataPointName: \"eth\", valueName: \"gbpPrice\", prefix: \"GBP £\", suffix: \"\", precision: \"2\", useColor: \"N\", shorten: \"N\", divisor: \"1\", image: \"/img/gb.png\"}",
        "         ",
        "{dataPointName: \"eth\", valueName: \"eurPrice\", prefix: \"EUR €\", suffix: \"\", precision: \"2\", useColor: \"N\", shorten: \"N\", divisor: \"1\", image: \"/img/eu.png\"}",
        "         ",
        "{dataPointName: \"eth\", valueName: \"cnyPrice\", prefix: \"CNY ¥\", suffix: \"\", precision: \"2\", useColor: \"N\", shorten: \"N\", divisor: \"1\", image: \"/img/cn.png\"}",
        "         ",
        "{dataPointName: \"eth\", valueName: \"cadPrice\", prefix: \"CAD $\", suffix: \"\", precision: \"2\", useColor: \"N\", shorten: \"N\", divisor: \"1\", image: \"/img/ca.png\"}",
        "         ",
        "{dataPointName: \"eth\", valueName: \"audPrice\", prefix: \"AUD $\", suffix: \"\", precision: \"2\", useColor: \"N\", shorten: \"N\", divisor: \"1\", image: \"/img/au.png\"}",
        "         ",
      ]
    }
    lower-ticker {
      font = "Segoe UI"
      fontHeight = 14
      color: "#ffffff"
      background: "#00009999"
      backgroundHighlight: "#00009999"
      positiveColor: "#00cc00ff"
      negativeColor: "#cc0000ff"
      top: "44px"
      cssSelector: "span.redditname:after"
      segments = [
        "{dataPointName: \"dgd\", valueName: \"price\", prefix: \"DGD $\", suffix: \"\", precision: \"2\", useColor: \"N\", shorten: \"N\", divisor: \"1\", image: \"/img/dgd.png\"}",
        "        ",
        "{dataPointName: \"augur\", valueName: \"price\", prefix: \"REP $\", suffix: \"\", precision: \"2\", useColor: \"N\", shorten: \"N\", divisor: \"1\", image: \"/img/rep.png\"}",
        "        ",
        "{dataPointName: \"plu\", valueName: \"price\", prefix: \"PLU $\", suffix: \"\", precision: \"2\", useColor: \"N\", shorten: \"N\", divisor: \"1\", image: \"/img/plutus.png\"}",
        "        ",
        "{dataPointName: \"icn\", valueName: \"price\", prefix: \"ICN $\", suffix: \"\", precision: \"2\", useColor: \"N\", shorten: \"N\", divisor: \"1\", image: \"/img/iconomi.png\"}",
        "        ",
        "{dataPointName: \"maker\", valueName: \"mkrPrice\", prefix: \"MKR $\", suffix: \"\", precision: \"2\", useColor: \"N\", shorten: \"N\", divisor: \"1\", image: \"/img/mkr.png\", fxName: \"eth\", fxValue: \"usdPrice\"}",
        "        ",
        "{dataPointName: \"maker\", valueName: \"gntPrice\", prefix: \"GNT $\", suffix: \"\", precision: \"3\", useColor: \"N\", shorten: \"N\", divisor: \"1\", image: \"/img/gnt.png\", fxName: \"eth\", fxValue: \"usdPrice\"}",
        "        "
      ]
    }
  }
}
