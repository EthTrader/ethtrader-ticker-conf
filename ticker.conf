ticker {
  // General settings.
  reddit {
    frequencySeconds = 300 // Every 5 minutes
    authUrl = "https://www.reddit.com/api/v1/"
    apiUrl = "https://oauth.reddit.com/"
  }

  // Define URLs, with %s placeholders for variables and interesting fields in the response.
  providers {
    coinmarketcap {
      url = "https://api.coinmarketcap.com/v1/ticker/%s/"
      fields {
        price = "/0/price_usd"
      }
    }
    coinmarketcapnexuist {
      url = "https://coinmarketcap-nexuist.rhcloud.com/api/%s"
      fields {
        btcPrice = "/price/btc"
        usdPrice = "/price/usd"
        gbpPrice = "/price/gbp"
        eurPrice = "/price/eur"
        cnyPrice = "/price/cny"
        cadPrice = "/price/cad"
        audPrice = "/price/aud"
        btcVolume = "/volume/btc"
        usdVolume = "/volume/usd"
        gbpVolume = "/volume/gbp"
        eurVolume = "/volume/eur"
        cnyVolume = "/volume/cny"
        cadVolume = "/volume/cad"
        audVolume = "/volume/aud"
        supply = "/supply"
      }
    }
    cryptofresh {
      url = "https://cryptofresh.com/api/asset/markets?asset=%s"
      fields {
        usdPrice = "/USD/price"
        btcPrice = "/BTC/price"
      }
    }
  }

  // Using the URLs defined above, choose some datapoints (first value is the name of the provider, the rest are used in the placeholders.
  dataPoints {
    eth = ["coinmarketcapnexuist", "eth"]
    etc = ["coinmarketcapnexuist", "etc"]

    dgd = ["coinmarketcap", "digixdao"]
    augur = ["coinmarketcap", "augur"]
    plu = ["coinmarketcap", "pluton"]
  }	

  // Define the format of the ticker(s) here:
  // Use the tokens as   path in json \ suffix symbol \    / format red/green based on sign
  // follows to display             {response.field|€|¢|3|Y|Y} <- reduce big numbers with 'k' for thousands, 'M' for millions etc.
  // formatted data.                prefix symbol /     \ decimal places
  tickers {
    upper-ticker {
      font = "Segoe UI"
      fontHeight = 14
      color = "#000000"
      background = "#ffffffbb"
      backgroundHighlight = "#ffff77bb"
      positiveColor: "#00cc00ff"
      negativeColor: "#cc0000ff"
      top: "22px"
      cssSelector: "span.redditname:before"
      segments = [
        "  ","[[/img/eth.png]]"," Vol: {eth.usdVolume|$||1|N|Y|1} Supply: {eth.supply|||0|N|Y|1}   ",
        "       ",
        "!  ","[[!/img/btc.png]]","! BTC {eth.btcPrice|฿ ||4|N|N|1}  ",
        "       ",
        "!  ","[[!/img/us.png]]","! USD {eth.usdPrice|$||2|N|N|1}  ",
        "       ",
        "  ","[[/img/gb.png]]"," GBP {eth.gbpPrice|£||2|N|N|1}  ",
        "       ",
        "  ","[[/img/eu.png]]"," EUR {eth.eurPrice|€||2|N|N|1}  ",
        "       ",
        "  ","[[/img/cn.png]]"," CNY {eth.cnyPrice|¥||2|N|N|1}  ",
        "       ",
        "  ","[[/img/ca.png]]"," CAD {eth.cadPrice|$||2|N|N|1}  ",
        "       ",
        "  ","[[/img/au.png]]"," AUD {eth.audPrice|$||2|N|N|1}  ",
        "       ",
      ]
    }
    lower-ticker {
      font = "Segoe UI"
      fontHeight = 14
      color: "#ffffff"
      background: "#00009999"
      backgroundHighlight: "#00009999"
      positiveColor: "#00cc00ff"
      negativeColor: "#cc0000ff"
      top: "44px"
      cssSelector: "span.redditname:after"
      segments = [
        "[[/img/dgd.png]]",
        " DGD {dgd.price|$||2|N|N|1}        ",
        "[[/img/rep.png]]",
        " AUG {augur.price|$||2|N|N|1}        ",
        "[[/img/etc.png]]",
        " ETC {etc.usdPrice|$||2|N|N|1}        ",
        "[[/img/plutus.png]]",
        " PLU {plu.price|$||2|N|N|1}        "
      ]
    }
  }
}
