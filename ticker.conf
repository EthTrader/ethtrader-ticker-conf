ticker {
  // General settings.
  reddit {
    frequencySeconds = 300 // Every 5 minutes
    authUrl = "https://www.reddit.com/api/v1/"
    apiUrl = "https://oauth.reddit.com/"
  }

  // Define URLs, with %s placeholders for variables and interesting fields in the response.
  providers {
    coinmarketcap {
      url = "https://api.coinmarketcap.com/v1/ticker/%s/?convert=%s"
      fields {
        priceBtc = "/price_btc"
        priceUsd = "/price_usd"
        priceGbp = "/price_gbp"
        priceEur = "/price_eur"
        priceCny = "/price_cny"
        priceCad = "/price_cad"
        priceAud = "/price_aud"
        priceRub = "/price_rub"
        supply = "/available_supply"
        usdVolume = "/24h_volume_usd"
        marketCap = "/market_cap_usd"
      }
    }
    maker {
      url = "https://api.mkr.market/"
      fields {
        mkrPrice = "/ETH_MKR/last"
      }
    }
    lambo {
      url = "http://hypecoaster.com/api/index"
      fields {
        price = "/products/0/usdPrice"
        usdPrice = "/etherUsdPrice/0"
      }
    }
  }

  // Using the URLs defined above, choose some datapoints (first value is the name of the provider, the rest are used in the placeholders.
  dataPoints {
    eth_btc = ["coinmarketcap", "ethereum", "btc"]
    eth_usd = ["coinmarketcap", "ethereum", "usd"]
    eth_gbp = ["coinmarketcap", "ethereum", "gbp"]
    eth_eur = ["coinmarketcap", "ethereum", "eur"]
    eth_cny = ["coinmarketcap", "ethereum", "cny"]
    eth_cad = ["coinmarketcap", "ethereum", "cad"]
    eth_aud = ["coinmarketcap", "ethereum", "aud"]
    eth_rub = ["coinmarketcap", "ethereum", "rub"]

    aragon = ["coinmarketcap", "aragon", "usd"]
    1st = ["coinmarketcap", "firstblood", "usd"]
    augur = ["coinmarketcap", "augur", "usd"]
    dgd = ["coinmarketcap", "digixdao", "usd"]
    gnosis = ["coinmarketcap", "gnosis-gno", "usd"]
    gnt = ["coinmarketcap", "golem-network-tokens", "usd"]
    icn = ["coinmarketcap", "iconomi", "usd"]
    maker = ["maker"]
    matchpool = ["coinmarketcap", "guppy", "usd"]
    melon = ["coinmarketcap", "melon", "usd"]
    nexium = ["coinmarketcap", "nexium", "usd"]
    omisego = ["coinmarketcap", "omisego", "usd"]
    plu = ["coinmarketcap", "pluton", "usd"]
    rlc = ["coinmarketcap", "rlc", "usd"]
    sngls = ["coinmarketcap", "singulardtv", "usd"]
    storj = ["coinmarketcap", "storjcoin-x", "usd"]
    swt = ["coinmarketcap", "swarm-city", "usd"]
    trst = ["coinmarketcap", "trust", "usd"]
    tokencard = ["coinmarketcap", "tokencard", "usd"]
    vslice = ["coinmarketcap", "vslice", "usd"]
    wings = ["coinmarketcap", "wings", "usd"]
    xaurum = ["coinmarketcap", "xaurum", "usd"]

    lambo = ["lambo"]
  }

  // Define the format of the ticker(s) here:
  // Use the tokens as   path in json \ suffix symbol \    / format red/green based on sign
  // follows to display             ","{dataPointName: \"response\", valueName: \"field\", prefix: \"€\", suffix: \"¢\", precision: \"3\", useColor: \"Y\", shorten: \"Y\", divisor: \"\"}"," <- reduce big numbers with 'k' for thousands, 'M' for millions etc.
  // formatted data.                prefix symbol /     \ decimal places
  tickers {
    upper-ticker {
      font = "Segoe UI"
      fontHeight = 14
      color = "#000000"
      background = "#ffffffbb"
      backgroundHighlight = "#ffff77bb"
      positiveColor: "#00cc00ff"
      negativeColor: "#cc0000ff"
      top: "22px"
      cssSelector: "span.redditname:before"
      joiner = "       "
      scrollDuration = 40
      segments = [
        "{dataPointName: \"eth_usd\", valueName: \"usdVolume\", prefix: \"Vol: $\", suffix: \"  \", precision: \"1\", useColor: \"N\", shorten: \"Y\", divisor: \"1\", image: \"/img/eth.png\"}",
        "{dataPointName: \"eth_usd\", valueName: \"supply\", prefix: \"  Supply: \", suffix: \"  \", precision: \"0\", useColor: \"N\", shorten: \"Y\", divisor: \"1\"}",
        "{dataPointName: \"eth_btc\", valueName: \"priceBtc\", prefix: \"BTC ฿ \", suffix: \"  \", precision: \"4\", useColor: \"N\", shorten: \"N\", divisor: \"1\", image: \"/img/btc.png\", highlight: true}",
        "{dataPointName: \"eth_usd\", valueName: \"priceUsd\", prefix: \"USD $\", suffix: \"  \", precision: \"2\", useColor: \"N\", shorten: \"N\", divisor: \"1\", image: \"/img/us.png\", highlight: true}",
        "{dataPointName: \"eth_gbp\", valueName: \"priceGbp\", prefix: \"GBP £\", suffix: \"  \", precision: \"2\", useColor: \"N\", shorten: \"N\", divisor: \"1\", image: \"/img/gb.png\"}",
        "{dataPointName: \"eth_eur\", valueName: \"priceEur\", prefix: \"EUR €\", suffix: \"  \", precision: \"2\", useColor: \"N\", shorten: \"N\", divisor: \"1\", image: \"/img/eu.png\"}",
        "{dataPointName: \"eth_cny\", valueName: \"priceCny\", prefix: \"CNY ¥\", suffix: \"  \", precision: \"2\", useColor: \"N\", shorten: \"N\", divisor: \"1\", image: \"/img/cn.png\"}",
        "{dataPointName: \"eth_cad\", valueName: \"priceCad\", prefix: \"CAD $\", suffix: \"  \", precision: \"2\", useColor: \"N\", shorten: \"N\", divisor: \"1\", image: \"/img/ca.png\"}",
        "{dataPointName: \"eth_aud\", valueName: \"priceAud\", prefix: \"AUD $\", suffix: \"  \", precision: \"2\", useColor: \"N\", shorten: \"N\", divisor: \"1\", image: \"/img/au.png\"}",
        "{dataPointName: \"eth_rub\", valueName: \"priceRub\", prefix: \"RUB P\", suffix: \"  \", precision: \"2\", useColor: \"N\", shorten: \"N\", divisor: \"1\", image: \"/img/ru.png\"}",
        "{dataPointName: \"lambo\", valueName: \"price\", prefix: \"LBO Ξ\", suffix: \"  \", precision: \"2\", useColor: \"N\", shorten: \"N\", divisor: \"1\", image: \"/img/lambo.png\", fxName: \"lambo\", fxValue: \"usdPrice\", fxValueInv: true}",
        "     ",
      ]
    }
    lower-ticker {
      font = "Segoe UI"
      fontHeight = 14
      color: "#ffffff"
      background: "#00009999"
      backgroundHighlight: "#00009999"
      positiveColor: "#00cc00ff"
      negativeColor: "#cc0000ff"
      top: "44px"
      cssSelector: "span.redditname:after"
      sort: "desc"
      maxItems = 10
      enableImages = true
      joiner = "       "
      showRank = false
      scrollDuration = 26
      segments = [
        "     ",
        "{dataPointName: \"dgd\",       sortValue: \"marketCap\", valueName: \"priceUsd\",    prefix: \" DGD $\",   suffix: \"\", precision: \"2\", useColor: \"N\", shorten: \"N\", divisor: \"1\", image: \"/img/dgd.png\"}",
        "{dataPointName: \"augur\",     sortValue: \"marketCap\", valueName: \"priceUsd\",    prefix: \" REP $\",   suffix: \"\", precision: \"2\", useColor: \"N\", shorten: \"N\", divisor: \"1\", image: \"/img/rep.png\"}",
        "{dataPointName: \"plu\",       sortValue: \"marketCap\", valueName: \"priceUsd\",    prefix: \" PLU $\",   suffix: \"\", precision: \"2\", useColor: \"N\", shorten: \"N\", divisor: \"1\", image: \"/img/plutus.png\"}",
        "{dataPointName: \"icn\",       sortValue: \"marketCap\", valueName: \"priceUsd\",    prefix: \" ICN $\",   suffix: \"\", precision: \"2\", useColor: \"N\", shorten: \"N\", divisor: \"1\", image: \"/img/iconomi.png\"}",
        "{dataPointName: \"maker\",     sortValue: \"marketCap\", valueName: \"mkrPrice\", prefix:  \"MKR $\",   suffix: \"\", precision: \"2\", useColor: \"N\", shorten: \"N\", divisor: \"1\", image: \"/img/mkr.png\", fxName: \"eth\", fxValue: \"usdPrice\", fxValueInv: false, sortMultiplier: \"1000000\"}",
        "{dataPointName: \"gnt\",       sortValue: \"marketCap\", valueName: \"priceUsd\",    prefix: \" GNT $\",   suffix: \"\", precision: \"3\", useColor: \"N\", shorten: \"N\", divisor: \"1\", image: \"/img/gnt.png\"}",
        "{dataPointName: \"melon\",     sortValue: \"marketCap\", valueName: \"priceUsd\",    prefix: \" MLN $\",   suffix: \"\", precision: \"2\", useColor: \"N\", shorten: \"N\", divisor: \"1\", image: \"/img/melon.png\"}",
        "{dataPointName: \"gnosis\",    sortValue: \"marketCap\", valueName: \"priceUsd\",    prefix: \" GNO $\",   suffix: \"\", precision: \"2\", useColor: \"N\", shorten: \"N\", divisor: \"1\", image: \"/img/gnosis.png\"}",
        "{dataPointName: \"sngls\",     sortValue: \"marketCap\", valueName: \"priceUsd\",    prefix: \" SNGLS $\", suffix: \"\", precision: \"2\", useColor: \"N\", shorten: \"N\", divisor: \"1\", image: \"/img/sngls.png\"}",
        "{dataPointName: \"1st\",       sortValue: \"marketCap\", valueName: \"priceUsd\",    prefix: \" 1ST $\",   suffix: \"\", precision: \"2\", useColor: \"N\", shorten: \"N\", divisor: \"1\", image: \"/img/1st.png\"}",
        "{dataPointName: \"storj\",     sortValue: \"marketCap\", valueName: \"priceUsd\",    prefix: \" SJCX $\",  suffix: \"\", precision: \"2\", useColor: \"N\", shorten: \"N\", divisor: \"1\", image: \"/img/storj.png\"}",
        "{dataPointName: \"rlc\",       sortValue: \"marketCap\", valueName: \"priceUsd\",    prefix: \" RLC $\",   suffix: \"\", precision: \"2\", useColor: \"N\", shorten: \"N\", divisor: \"1\", image: \"/img/rlc.png\"}",
        "{dataPointName: \"trst\",      sortValue: \"marketCap\", valueName: \"priceUsd\",    prefix: \" TRST $\",  suffix: \"\", precision: \"2\", useColor: \"N\", shorten: \"N\", divisor: \"1\", image: \"/img/trst.png\"}",
        "{dataPointName: \"swt\",       sortValue: \"marketCap\", valueName: \"priceUsd\",    prefix: \" SWT $\",   suffix: \"\", precision: \"2\", useColor: \"N\", shorten: \"N\", divisor: \"1\", image: \"/img/swarm.png\"}",
        "{dataPointName: \"wings\",     sortValue: \"marketCap\", valueName: \"priceUsd\",    prefix: \" WINGS $\", suffix: \"\", precision: \"2\", useColor: \"N\", shorten: \"N\", divisor: \"1\", image: \"/img/wings.png\"}",
        "{dataPointName: \"matchpool\", sortValue: \"marketCap\", valueName: \"priceUsd\",    prefix: \" GUP $\",   suffix: \"\", precision: \"2\", useColor: \"N\", shorten: \"N\", divisor: \"1\", image: \"/img/matchpool.png\"}",
        "{dataPointName: \"nexium\",    sortValue: \"marketCap\", valueName: \"priceUsd\",    prefix: \" NXC $\",   suffix: \"\", precision: \"2\", useColor: \"N\", shorten: \"N\", divisor: \"1\", image: \"/img/nexium.png\"}",
        "{dataPointName: \"vslice\",    sortValue: \"marketCap\", valueName: \"priceUsd\",    prefix: \" VSL $\",   suffix: \"\", precision: \"2\", useColor: \"N\", shorten: \"N\", divisor: \"1\", image: \"/img/vslice.png\"}",
        "{dataPointName: \"xaurum\",    sortValue: \"marketCap\", valueName: \"priceUsd\",    prefix: \" XAUR $\",  suffix: \"\", precision: \"2\", useColor: \"N\", shorten: \"N\", divisor: \"1\", image: \"/img/xaurum.png\"}",
        "{dataPointName: \"tokencard\", sortValue: \"marketCap\", valueName: \"priceUsd\",    prefix: \" TKN $\",   suffix: \"\", precision: \"2\", useColor: \"N\", shorten: \"N\", divisor: \"1\", image: \"/img/tokencard.png\"}",
        "{dataPointName: \"aragon\",    sortValue: \"marketCap\", valueName: \"priceUsd\",    prefix: \" ANT $\",   suffix: \"\", precision: \"2\", useColor: \"N\", shorten: \"N\", divisor: \"1\", image: \"/img/aragon.png\"}",
        "{dataPointName: \"omisego\",   sortValue: \"marketCap\", valueName: \"priceUsd\",    prefix: \" OMG $\",   suffix: \"\", precision: \"2\", useColor: \"N\", shorten: \"N\", divisor: \"1\", image: \"/img/omg.png\"}",
      ]
    }
  }
}